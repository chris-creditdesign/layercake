import{S as Pt,i as Dt,s as Tt,az as at,e as o,t as i,k as x,w as me,c as n,a as h,h as f,d as r,m as q,x as wt,b as t,g as _e,G as e,y as ge,o as O,p as ye,q as M,B as ke,_ as Gt,aA as Bt,I as Et,n as be}from"../chunks/vendor-f0516da2.js";import{e as St}from"../chunks/_examples-23ec6e40.js";import{e as $t}from"../chunks/_examples_ssr-f35b23d3.js";import{h as xt}from"../chunks/hljsDefineSvelte-bd0b92b8.js";import"../chunks/pointsFour-f71b2abc.js";/* empty css                                                         *//* empty css                                                       *//* empty css                                                                                  */import"../chunks/uniques-1f8599f0.js";function qt(b,c,v){const p=b.slice();return p[1]=c[v],p}function At(b,c,v){const p=b.slice();return p[1]=c[v],p}function Lt(b){let c,v,p,_=b[1].title+"",A,T,V,m,P,Q,w,a,L,E;var $=b[1].component;function z(u){return{}}return $&&(a=new $(z())),{c(){c=o("div"),v=o("h4"),p=o("a"),A=i(_),V=x(),m=o("a"),P=i("Edit"),w=x(),a&&me(a.$$.fragment),L=x(),this.h()},l(u){c=n(u,"DIV",{class:!0});var k=h(c);v=n(k,"H4",{class:!0});var S=h(v);p=n(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var C=h(p);A=f(C,_),C.forEach(r),V=q(S),m=n(S,"A",{class:!0,href:!0,target:!0,rel:!0});var J=h(m);P=f(J,"Edit"),J.forEach(r),S.forEach(r),w=q(k),a&&wt(a.$$.fragment,k),L=q(k),k.forEach(r),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href",T="/example/"+b[1].slug),t(p,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",Q="https://svelte.dev/repl/"+b[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(v,"class","title svelte-rfh4mq"),t(c,"class","gallery-item svelte-rfh4mq")},m(u,k){_e(u,c,k),e(c,v),e(v,p),e(p,A),e(v,V),e(v,m),e(m,P),e(c,w),a&&ge(a,c,null),e(c,L),E=!0},p(u,k){if($!==($=u[1].component)){if(a){be();const S=a;O(S.$$.fragment,1,0,()=>{ke(S,1)}),ye()}$?(a=new $(z()),me(a.$$.fragment),M(a.$$.fragment,1),ge(a,c,L)):a=null}},i(u){E||(a&&M(a.$$.fragment,u),E=!0)},o(u){a&&O(a.$$.fragment,u),E=!1},d(u){u&&r(c),a&&ke(a)}}}function Ct(b){let c,v,p,_=b[1].title+"",A,T,V,m,P,Q,w,a,L,E;var $=b[1].component;function z(u){return{}}return $&&(a=new $(z())),{c(){c=o("div"),v=o("h4"),p=o("a"),A=i(_),V=x(),m=o("a"),P=i("Edit"),w=x(),a&&me(a.$$.fragment),L=x(),this.h()},l(u){c=n(u,"DIV",{class:!0});var k=h(c);v=n(k,"H4",{class:!0});var S=h(v);p=n(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var C=h(p);A=f(C,_),C.forEach(r),V=q(S),m=n(S,"A",{class:!0,href:!0,target:!0,rel:!0});var J=h(m);P=f(J,"Edit"),J.forEach(r),S.forEach(r),w=q(k),a&&wt(a.$$.fragment,k),L=q(k),k.forEach(r),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href",T="/example-ssr/"+b[1].slug),t(p,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",Q="https://svelte.dev/repl/"+b[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(v,"class","title svelte-rfh4mq"),t(c,"class","gallery-item svelte-rfh4mq"),Gt(c,"scaled",b[1].title.toLowerCase().includes("map"))},m(u,k){_e(u,c,k),e(c,v),e(v,p),e(p,A),e(v,V),e(v,m),e(m,P),e(c,w),a&&ge(a,c,null),e(c,L),E=!0},p(u,k){if($!==($=u[1].component)){if(a){be();const S=a;O(S.$$.fragment,1,0,()=>{ke(S,1)}),ye()}$?(a=new $(z()),me(a.$$.fragment),M(a.$$.fragment,1),ge(a,c,L)):a=null}},i(u){E||(a&&M(a.$$.fragment,u),E=!0)},o(u){a&&O(a.$$.fragment,u),E=!1},d(u){u&&r(c),a&&ke(a)}}}function Mt(b){let c,v,p,_,A,T,V,m,P,Q,w,a,L,E,$,z,u,k,S,C,J,we,le,Ee,Se,Z,$e,xe,qe,j,Ae,F,Le,Ce,oe,je,He,ne,Ie,Ve,Pe,H,De,W,Te,Ge,R,Be,Me,X,ze,Je,Re,ce,ie,jt=at.highlight(b[0],{language:"svelte"}).value+"",Ne,ee,Ue,D,he,Fe,We,G,Xe,N,Ye,Ke,U,Oe,Qe,Ze,pe,et,tt,te,de,ae=St,g=[];for(let l=0;l<ae.length;l+=1)g[l]=Lt(At(b,ae,l));const Ht=l=>O(g[l],1,1,()=>{g[l]=null});let se=$t,y=[];for(let l=0;l<se.length;l+=1)y[l]=Ct(qt(b,se,l));const It=l=>O(y[l],1,1,()=>{y[l]=null});return{c(){c=o("meta"),v=o("meta"),p=x(),_=o("div"),A=o("div"),T=o("div"),V=x(),m=o("h1"),P=i("Layer Cake"),Q=x(),w=o("div"),a=o("p"),L=i("Layer Cake is a graphics framework for "),E=o("a"),$=i("Svelte"),z=i(". It uses the measurements of your target div and your data extents to create scales that "),u=o("span"),k=i("stay synced"),S=i(" on layout changes. Use these scales to organize multiple, "),C=o("span"),J=i("mostly-reusable Svelte components"),we=i(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o("span"),Ee=i("responsive graphics server-side"),Se=i(" that "),Z=o("a"),$e=i("work without JavaScript"),xe=i("."),qe=x(),j=o("p"),Ae=i("Unlike other libraries, "),F=o("a"),Le=i("chart components"),Ce=i(" live "),oe=o("span"),je=i("inside your project"),He=i(", so you have complete control for "),ne=o("span"),Ie=i("customization"),Ve=i("."),Pe=x(),H=o("p"),De=i("Read the "),W=o("a"),Te=i("guide"),Ge=i(", try the "),R=o("a"),Be=i("starter template"),Me=i(" or check out "),X=o("a"),ze=i("example components"),Je=i(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),Re=x(),ce=o("div"),ie=o("pre"),Ne=x(),ee=o("div");for(let l=0;l<g.length;l+=1)g[l].c();Ue=x(),D=o("div"),he=o("h2"),Fe=i("Server-side rendering"),We=x(),G=o("p"),Xe=i("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),N=o("a"),Ye=i("viewBox"),Ke=i(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=o("a"),Oe=i("this blog post"),Qe=i("."),Ze=x(),pe=o("p"),et=i("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),tt=x(),te=o("div");for(let l=0;l<y.length;l+=1)y[l].c();this.h()},l(l){const d=Bt('[data-svelte="svelte-ep3aok"]',document.head);c=n(d,"META",{name:!0,content:!0}),v=n(d,"META",{name:!0,content:!0}),d.forEach(r),p=q(l),_=n(l,"DIV",{class:!0});var s=h(_);A=n(s,"DIV",{class:!0});var B=h(A);T=n(B,"DIV",{id:!0,class:!0}),h(T).forEach(r),V=q(B),m=n(B,"H1",{class:!0});var st=h(m);P=f(st,"Layer Cake"),st.forEach(r),B.forEach(r),Q=q(s),w=n(s,"DIV",{id:!0,class:!0});var fe=h(w);a=n(fe,"P",{class:!0});var I=h(a);L=f(I,"Layer Cake is a graphics framework for "),E=n(I,"A",{href:!0,target:!0,rel:!0,class:!0});var rt=h(E);$=f(rt,"Svelte"),rt.forEach(r),z=f(I,". It uses the measurements of your target div and your data extents to create scales that "),u=n(I,"SPAN",{class:!0});var lt=h(u);k=f(lt,"stay synced"),lt.forEach(r),S=f(I," on layout changes. Use these scales to organize multiple, "),C=n(I,"SPAN",{class:!0});var ot=h(C);J=f(ot,"mostly-reusable Svelte components"),ot.forEach(r),we=f(I,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=n(I,"SPAN",{class:!0});var nt=h(le);Ee=f(nt,"responsive graphics server-side"),nt.forEach(r),Se=f(I," that "),Z=n(I,"A",{href:!0,class:!0});var ct=h(Z);$e=f(ct,"work without JavaScript"),ct.forEach(r),xe=f(I,"."),I.forEach(r),qe=q(fe),j=n(fe,"P",{class:!0});var Y=h(j);Ae=f(Y,"Unlike other libraries, "),F=n(Y,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var it=h(F);Le=f(it,"chart components"),it.forEach(r),Ce=f(Y," live "),oe=n(Y,"SPAN",{class:!0});var ht=h(oe);je=f(ht,"inside your project"),ht.forEach(r),He=f(Y,", so you have complete control for "),ne=n(Y,"SPAN",{class:!0});var ft=h(ne);Ie=f(ft,"customization"),ft.forEach(r),Ve=f(Y,"."),Y.forEach(r),Pe=q(fe),H=n(fe,"P",{class:!0});var K=h(H);De=f(K,"Read the "),W=n(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var ut=h(W);Te=f(ut,"guide"),ut.forEach(r),Ge=f(K,", try the "),R=n(K,"A",{href:!0,target:!0,rel:!0,class:!0});var vt=h(R);Be=f(vt,"starter template"),vt.forEach(r),Me=f(K," or check out "),X=n(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var pt=h(X);ze=f(pt,"example components"),pt.forEach(r),Je=f(K,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),K.forEach(r),fe.forEach(r),Re=q(s),ce=n(s,"DIV",{class:!0});var dt=h(ce);ie=n(dt,"PRE",{class:!0});var Vt=h(ie);Vt.forEach(r),dt.forEach(r),Ne=q(s),ee=n(s,"DIV",{id:!0});var mt=h(ee);for(let re=0;re<g.length;re+=1)g[re].l(mt);mt.forEach(r),Ue=q(s),D=n(s,"DIV",{class:!0,id:!0});var ue=h(D);he=n(ue,"H2",{class:!0});var _t=h(he);Fe=f(_t,"Server-side rendering"),_t.forEach(r),We=q(ue),G=n(ue,"P",{class:!0});var ve=h(G);Xe=f(ve,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),N=n(ve,"A",{href:!0,target:!0,rel:!0,class:!0});var gt=h(N);Ye=f(gt,"viewBox"),gt.forEach(r),Ke=f(ve," and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=n(ve,"A",{href:!0,target:!0,rel:!0,class:!0});var yt=h(U);Oe=f(yt,"this blog post"),yt.forEach(r),Qe=f(ve,"."),ve.forEach(r),Ze=q(ue),pe=n(ue,"P",{});var kt=h(pe);et=f(kt,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),kt.forEach(r),ue.forEach(r),tt=q(s),te=n(s,"DIV",{id:!0});var bt=h(te);for(let re=0;re<y.length;re+=1)y[re].l(bt);bt.forEach(r),s.forEach(r),this.h()},h(){document.title="Layer Cake",t(c,"name","og:title"),t(c,"content","Layer Cake"),t(v,"name","twitter:title"),t(v,"content","Layer Cake"),t(T,"id","logo"),t(T,"class","svelte-rfh4mq"),t(m,"class","svelte-rfh4mq"),t(A,"class","logo-container svelte-rfh4mq"),t(E,"href","https://svelte.dev"),t(E,"target","_blank"),t(E,"rel","noopener"),t(E,"class","svelte-rfh4mq"),t(u,"class","strong svelte-rfh4mq"),t(C,"class","strong svelte-rfh4mq"),t(le,"class","strong svelte-rfh4mq"),t(Z,"href","#server-side"),t(Z,"class","svelte-rfh4mq"),t(a,"class","svelte-rfh4mq"),t(F,"href","/components"),t(F,"sveltekit:prefetch",""),t(F,"class","svelte-rfh4mq"),t(oe,"class","strong svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(j,"class","svelte-rfh4mq"),t(W,"href","guide"),t(W,"sveltekit:prefetch",""),t(W,"class","svelte-rfh4mq"),t(R,"href","https://github.com/mhkeller/layercake-template"),t(R,"target","_blank"),t(R,"rel","nofollow"),t(R,"class","svelte-rfh4mq"),t(X,"href","components"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-rfh4mq"),t(H,"class","svelte-rfh4mq"),t(w,"id","dek"),t(w,"class","svelte-rfh4mq"),t(ie,"class","svelte-rfh4mq"),t(ce,"class","code-example svelte-rfh4mq"),t(ee,"id","gallery"),t(he,"class","svelte-rfh4mq"),t(N,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(N,"target","_blank"),t(N,"rel","nofollow"),t(N,"class","svelte-rfh4mq"),t(U,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(U,"target","_blank"),t(U,"rel","nofollow"),t(U,"class","svelte-rfh4mq"),t(G,"class","svelte-rfh4mq"),t(D,"class","section-hed svelte-rfh4mq"),t(D,"id","server-side"),t(te,"id","ssr-gallery"),t(_,"class","main svelte-rfh4mq")},m(l,d){e(document.head,c),e(document.head,v),_e(l,p,d),_e(l,_,d),e(_,A),e(A,T),e(A,V),e(A,m),e(m,P),e(_,Q),e(_,w),e(w,a),e(a,L),e(a,E),e(E,$),e(a,z),e(a,u),e(u,k),e(a,S),e(a,C),e(C,J),e(a,we),e(a,le),e(le,Ee),e(a,Se),e(a,Z),e(Z,$e),e(a,xe),e(w,qe),e(w,j),e(j,Ae),e(j,F),e(F,Le),e(j,Ce),e(j,oe),e(oe,je),e(j,He),e(j,ne),e(ne,Ie),e(j,Ve),e(w,Pe),e(w,H),e(H,De),e(H,W),e(W,Te),e(H,Ge),e(H,R),e(R,Be),e(H,Me),e(H,X),e(X,ze),e(H,Je),e(_,Re),e(_,ce),e(ce,ie),ie.innerHTML=jt,e(_,Ne),e(_,ee);for(let s=0;s<g.length;s+=1)g[s].m(ee,null);e(_,Ue),e(_,D),e(D,he),e(he,Fe),e(D,We),e(D,G),e(G,Xe),e(G,N),e(N,Ye),e(G,Ke),e(G,U),e(U,Oe),e(G,Qe),e(D,Ze),e(D,pe),e(pe,et),e(_,tt),e(_,te);for(let s=0;s<y.length;s+=1)y[s].m(te,null);de=!0},p(l,[d]){if(d&0){ae=St;let s;for(s=0;s<ae.length;s+=1){const B=At(l,ae,s);g[s]?(g[s].p(B,d),M(g[s],1)):(g[s]=Lt(B),g[s].c(),M(g[s],1),g[s].m(ee,null))}for(be(),s=ae.length;s<g.length;s+=1)Ht(s);ye()}if(d&0){se=$t;let s;for(s=0;s<se.length;s+=1){const B=qt(l,se,s);y[s]?(y[s].p(B,d),M(y[s],1)):(y[s]=Ct(B),y[s].c(),M(y[s],1),y[s].m(te,null))}for(be(),s=se.length;s<y.length;s+=1)It(s);ye()}},i(l){if(!de){for(let d=0;d<ae.length;d+=1)M(g[d]);for(let d=0;d<se.length;d+=1)M(y[d]);de=!0}},o(l){g=g.filter(Boolean);for(let d=0;d<g.length;d+=1)O(g[d]);y=y.filter(Boolean);for(let d=0;d<y.length;d+=1)O(y[d]);de=!1},d(l){r(c),r(v),l&&r(p),l&&r(_),Et(g,l),Et(y,l)}}}const Ot=!0;function zt(b){return at.registerLanguage("svelte",xt),xt(at),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Qt extends Pt{constructor(c){super();Dt(this,c,zt,Mt,Tt,{})}}export{Qt as default,Ot as prerender};
